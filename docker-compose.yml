version: "3"
networks:
  laravel:

services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: nginx
    ports:
      - "8090:80"
    volumes:
      - ./src:/var/www
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:5.7.22
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3406:3406"
    environment:
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - ./src:/var/www
    ports:
      - "9000:9000"
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: composer
    volumes:
      - ./src:/var/www
    working_dir: /var/www
    depends_on:
      - php
    networks:
      - laravel
    entrypoint: ["composer", "--ignore-platform-reqs"]

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./src:/var/www
    working_dir: /var/www
    entrypoint: ["npm"]

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www
    depends_on:
      - mysql
    working_dir: /var/www
    entrypoint: ["php", "/var/www/artisan"]
    networks:
      - laravel
